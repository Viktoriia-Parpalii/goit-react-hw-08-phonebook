{"version":3,"file":"static/js/254.9b4d333f.chunk.js","mappings":"kNACA,EAAuB,0BAAvB,EAA2D,6B,uCCI9CA,EAAc,WACzB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASA,SAASG,KAA5B,IAmClC,OACE,kBAAMC,UAAWC,EAAUC,SAdR,SAAAC,GACnBA,EAAEC,iBArBqB,SAAAC,GAErBT,EAASU,MACP,SAAAC,GAAO,OACLA,EAAQjB,KAAKkB,gBAAkBH,EAAaf,KAAKkB,aAD5C,IAITC,MAAM,GAAD,OAAIJ,EAAaf,KAAjB,4BAGPI,GAASgB,EAAAA,EAAAA,YAAWL,GACrB,CAgBCM,CALqB,CACnBrB,KAAAA,EACAE,OAAAA,IAKFD,EAAQ,IACRE,EAAU,GACX,EAGC,WACE,8BACE,qCACA,kBACEmB,KAAK,OACLC,MAAOvB,EACPwB,SA3BsB,SAAAX,GAC5BZ,EAAQY,EAAEY,OAAOF,MAClB,EA0BOvB,KAAK,OACL0B,YAAY,iBAEZC,MAAM,yIACNC,UAAQ,QAGZ,8BACE,uCACA,kBACEN,KAAK,MACLC,MAAOrB,EACPsB,SArCwB,SAAAX,GAC9BV,EAAUU,EAAEY,OAAOF,MACpB,EAoCOvB,KAAK,SACL0B,YAAY,YACZG,QAAQ,qGACRF,MAAM,+FACNC,UAAQ,QAGZ,mBAAQlB,UAAWC,EAAnB,2BAGL,EC3ED,GAAiB,E,UCKJmB,EAAe,WAC1B,IAAM1B,GAAWC,EAAAA,EAAAA,MACX0B,GAASxB,EAAAA,EAAAA,IAAYyB,EAAAA,IAM3B,OACE,eAAItB,UAAWC,EAAAA,KAAf,SACGoB,EAAOE,KAAI,SAAAhB,GACV,IAAQiB,EAAqBjB,EAArBiB,GAAIlC,EAAiBiB,EAAjBjB,KAAME,EAAWe,EAAXf,OAClB,OACE,2BACE,yBAAMF,KACN,yBAAME,KACN,mBAAQoB,KAAK,SAASa,QAAS,kBAZpBC,EAYuCF,OAX1D9B,GAASiC,EAAAA,EAAAA,eAAcD,IADJ,IAAAA,CAYoB,EAA/B,sBAHOF,EAQZ,KAGN,EC7BD,EAA8B,4BAA9B,EAAwE,4BCM3DI,EAAS,WACpB,IAAMlC,GAAWC,EAAAA,EAAAA,MAEX0B,GAASxB,EAAAA,EAAAA,IAAYgC,EAAAA,IAK3B,OACE,iCACE,cAAG7B,UAAWC,EAAd,oCACA,kBACED,UAAWC,EACXW,KAAK,OACLC,MAAOQ,EACP/B,KAAK,SACL0B,YAAY,SACZF,SAZqB,SAAAX,GACzBT,GAASoC,EAAAA,EAAAA,WAAU3B,EAAEY,OAAOF,OAC7B,MAcF,ECAD,EAnBqB,WACnB,IAAMnB,GAAWC,EAAAA,EAAAA,MAMjB,OAJAoC,EAAAA,EAAAA,YAAU,WACRrC,GAASsC,EAAAA,EAAAA,iBACV,GAAE,CAACtC,KAGF,iCACE,eAAIM,UAAU,yBAAd,wBACA,SAACZ,EAAD,KACA,eAAIY,UAAU,yBAAd,uBACA,SAAC4B,EAAD,KACqB,IAApBK,EAAAA,KAA4B,SAAC,IAAD,KAC7B,SAACb,EAAD,MAGL,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formBtn\":\"ContactForm_formBtn__qZGY3\"};","import css from './ContactForm.module.css';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts.items);\n\n  const handleAddContact = userContacts => {\n    if (\n      contacts.some(\n        contact =>\n          contact.name.toLowerCase() === userContacts.name.toLowerCase()\n      )\n    ) {\n      alert(`${userContacts.name} is already in contacts`);\n      return;\n    }\n    dispatch(addContact(userContacts));\n  };\n\n  const handleInputChangeName = e => {\n    setName(e.target.value);\n  };\n  const handleInputChangeNumber = e => {\n    setNumber(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const userContacts = {\n      name,\n      number,\n    };\n\n    handleAddContact(userContacts);\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label>\n        <span>Name:</span>\n        <input\n          type=\"text\"\n          value={name}\n          onChange={handleInputChangeName}\n          name=\"name\"\n          placeholder=\"Angelina Jolie\"\n          //  pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я])$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        <span>Number:</span>\n        <input\n          type=\"tel\"\n          value={number}\n          onChange={handleInputChangeNumber}\n          name=\"number\"\n          placeholder=\"569-82-57\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={css.formBtn}>Add contact</button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useDispatch, useSelector } from 'react-redux';\nimport css from './ContactsList.module.css';\nimport { deleteContact } from 'redux/contacts';\n\nimport { selectVisibleContacts } from 'redux/contacts.selectors';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectVisibleContacts);\n\n  const handleDelete = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <ul className={css.list}>\n      {filter.map(contact => {\n        const { id, name, number } = contact;\n        return (\n          <li key={id}>\n            <div>{name}</div>\n            <div>{number}</div>\n            <button type=\"button\" onClick={() => handleDelete(id)}>\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"titleFilter\":\"Filter_titleFilter__eRASS\",\"inputFilter\":\"Filter_inputFilter__8QMOp\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts';\nimport { selectFilter } from 'redux/contacts.selectors';\n\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(selectFilter);\n\n  const handleFilterChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n  return (\n    <>\n      <p className={css.titleFilter}>Find contacts by name</p>\n      <input\n        className={css.inputFilter}\n        type=\"text\"\n        value={filter}\n        name=\"filter\"\n        placeholder=\"Search\"\n        onChange={handleFilterChange}\n      />\n    </>\n  );\n};\n","import Loader from 'components/CircleLoader/CircleLoader';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts';\nimport { selectIsLoading } from 'redux/contacts.selectors';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1 className=\"tracking-in-expand-fwd\">Phonebook</h1>\n      <ContactForm />\n      <h2 className=\"tracking-in-expand-fwd\">Contacts</h2>\n      <Filter />\n      {selectIsLoading === true && <Loader />}\n      <ContactsList />\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","contacts","useSelector","state","items","className","css","onSubmit","e","preventDefault","userContacts","some","contact","toLowerCase","alert","addContact","handleAddContact","type","value","onChange","target","placeholder","title","required","pattern","ContactsList","filter","selectVisibleContacts","map","id","onClick","contactId","deleteContact","Filter","selectFilter","setFilter","useEffect","fetchContacts","selectIsLoading"],"sourceRoot":""}